<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Shihab Mahamud</title>
        <link>https://shihabmahamud.github.io/</link>
        <description>Recent content on Shihab Mahamud</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 09 Mar 2021 10:09:41 +0600</lastBuildDate><atom:link href="https://shihabmahamud.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>CPH Tool Documentation</title>
        <link>https://shihabmahamud.github.io/p/cph-tool-documentation/</link>
        <pubDate>Tue, 09 Mar 2021 10:09:41 +0600</pubDate>
        
        <guid>https://shihabmahamud.github.io/p/cph-tool-documentation/</guid>
        <description>&lt;img src="https://shihabmahamud.github.io/p/cph-tool-documentation/Competitive-Programming-img.png" alt="Featured image of post CPH Tool Documentation" /&gt;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Competitive Programming Helper (CPH) is a command line tool that automates many tasks for the Competitive Programmer. It&amp;rsquo;s written in Bash shell scripting.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;h3 id=&#34;installation-on-linux-system&#34;&gt;Installation on linux system&lt;/h3&gt;
&lt;p&gt;
    &lt;asciinema-player
        src=&#34;https://shihabmahamud.github.io/casts/cph-tool-install.cast&#34;
        cols=&#34;100&#34;
        rows=&#34;20&#34;
        
        preload=&#34;1&#34;
        
        start-at=&#34;0&#34;
        speed=&#34;1&#34;
        
        
        
        
        
        
        
        
    &gt;&lt;/asciinema-player&gt;
&lt;/p&gt;
&lt;h4 id=&#34;step-1-install-dependence&#34;&gt;Step 1: Install dependence&lt;/h4&gt;
&lt;p&gt;If the dependence does not install in your system then you must install it. The dependence are &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;g++&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Debian/Ubuntu:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;sudo apt update
sudo apt install bash curl g++
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fadora/Centos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;sudo dnf check-update
sudo dnf install bash curl g++
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;step-2-install-the-cph-tools&#34;&gt;Step 2: Install the cph tools&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -fLo cph https://raw.githubusercontent.com/shihabmahamud/cph/main/cph.sh
chmod +x cph
sudo mv cph /usr/bin/

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;step-3-copy-your-cp-template-into-cph_template&#34;&gt;Step 3: Copy your cp template into ~/cph_template&lt;/h4&gt;
&lt;p&gt;Then go to the your competitive programming template directory and then run &lt;code&gt;cph update yourCPTemplateName&lt;/code&gt; like that&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph update cp_template.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;h3 id=&#34;1-create-cc-file-and-copy-your-template&#34;&gt;1. Create C/C++ file and copy your template&lt;/h3&gt;
&lt;p&gt;It creates a C or C++ file and copies the user Competitive Programming Template into it. Copy the template code from &lt;code&gt;~/cph_template&lt;/code&gt; file. So, if you want to use this feature create the ~/cph_template file fllowing &lt;a class=&#34;link&#34; href=&#34;#step-3-copy-your-cp-template-into-cph_template&#34; &gt;Installation on linux system
Step 3&lt;/a&gt; with your template.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph &lt;span class=&#34;s2&#34;&gt;&amp;#34;filename.c++
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;OR&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph create &lt;span class=&#34;s2&#34;&gt;&amp;#34;filename.c++&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph myfile.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All these commands only work in bash shell. If you run this in other shell (like &lt;code&gt;zsh&lt;/code&gt;) include &lt;code&gt;bash&lt;/code&gt; command before any command like that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;bash cph create &lt;span class=&#34;s2&#34;&gt;&amp;#34;filename.c++&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-create-cc-file-copy-your-template-and-open-the-file-in-vs-codehttpscodevisualstudiocom-in-one-command&#34;&gt;2. Create C/C++ file, copy your template and open the file in &lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;vs code&lt;/code&gt;&lt;/a&gt; in one command&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph code &lt;span class=&#34;s2&#34;&gt;&amp;#34;filename.c++&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;3-compiled-and-run-cc-file-with-one-command&#34;&gt;3. Compiled and Run C/C++ file with one command&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph run &lt;span class=&#34;s2&#34;&gt;&amp;#34;filename.cpp&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command automatic Compiled spacifie file using &lt;code&gt;GNU Gcc Compiler&lt;/code&gt; and run the Compiled binary&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;4-automatic-copy-or-update-cph_template-with-your-template&#34;&gt;4. Automatic copy or update ~/.cph_template with Your template&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph update &lt;span class=&#34;s2&#34;&gt;&amp;#34;templateName.cpp&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command automatic copy the ~/.cph_temple with user template that user want&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;5-git-add--git-commit-and-git-push-in-one-command&#34;&gt;5. &lt;code&gt;git add .&lt;/code&gt;, &lt;code&gt;git commit&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; in one command&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;6-add-current-time-in-your-program-file&#34;&gt;6. Add current time in your program file&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cph &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;programFile.cpp&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
</description>
        </item>
        <item>
        <title>File Management Using C</title>
        <link>https://shihabmahamud.github.io/p/file-management-using-c/</link>
        <pubDate>Tue, 09 Mar 2021 06:31:25 +0600</pubDate>
        
        <guid>https://shihabmahamud.github.io/p/file-management-using-c/</guid>
        <description>&lt;img src="https://shihabmahamud.github.io/p/file-management-using-c/file_handling_c.jpg" alt="Featured image of post File Management Using C" /&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#declear-file-pointer&#34; &gt;Declear FILE Pointer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#opening-file&#34; &gt;Opening file&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#file-type-mode-table&#34; &gt;File type mode table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#open-file-with-error-checking&#34; &gt;Open file with Error checking&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#closing-file&#34; &gt;Closing file&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#closing-file-with-error-checking&#34; &gt;Closing file with Error checking&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;declear-file-pointer&#34;&gt;Declear FILE Pointer&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;n&#34;&gt;FILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here FILE is not C keyword, it is a structure that define in &amp;lt;sthio.h&amp;gt; header file.&lt;/p&gt;
&lt;h2 id=&#34;opening-file&#34;&gt;Opening file&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Header: &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Prototype: FILE *fopen(char*fname, char *made);
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Return:
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    - a FILE pointer    -&amp;gt; if successfully
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    - NULL              -&amp;gt; On failure
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;MyFile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fopen&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;“&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;file-type-mode-table&#34;&gt;File type mode table:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;The Legal Values for Mode

Mode        Meaning
----        -------
&amp;quot;r&amp;quot;         Open a text file for reading.
&amp;quot;w&amp;quot;         Create a text file for writing.
&amp;quot;a&amp;quot;         Append to a text file.
&amp;quot;rb&amp;quot;        Open a binary file for reading.
&amp;quot;wb&amp;quot;        Create a binary file for writing.
&amp;quot;ab&amp;quot;        Append to a binary file.
&amp;quot;r+&amp;quot;        Open a text file for read/write.
&amp;quot;w+&amp;quot;        Create a text file for read/write.
&amp;quot;a+&amp;quot;        Append or create a text file for read/write.
&amp;quot;r+b&amp;quot;       Open a binary file for read/write. You may also use &amp;quot;rb+&amp;quot;.
&amp;quot;w+b&amp;quot;       Create a binary file for read/write. You may also use &amp;quot;wb+&amp;quot;.
&amp;quot;a+b&amp;quot;       Append or create a binary file for read/write. You may also use &amp;quot;ab+&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;open-file-with-error-checking&#34;&gt;Open file with Error checking&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Header: &amp;lt;stdlib.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Prototype: void exit (int status);
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Header: &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Macro: #define NULL ((void *)0)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;MyFile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fopen&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;“&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyFile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Error opening file&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// or substitute your own error handler
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The C library Macro &lt;code&gt;NULL&lt;/code&gt; is the value of a null pointer constant. It may be defined as &lt;code&gt;((void*)0)&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;0L&lt;/code&gt; depending on the compiler vendor. It&amp;rsquo;s define in &amp;lt;stdio.h&amp;gt; header file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// This fragment is same as the previes on but more efficient
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyFile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;myfile.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Error opening file&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;closing-file&#34;&gt;Closing file&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Header: &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Prototype = int fclose(FILE *fp);
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Return:
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    - 0             -&amp;gt; if the stream is successfully closed.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    - EOF or -1     -&amp;gt; On failure
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Header: &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;Macro: #define EOF (-1)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fclose&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;closing-file-with-error-checking&#34;&gt;Closing file with Error checking&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fclose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EOF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Error closing destination file.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>প্রোগ্রামিংয়ের আশ্চর্য জগৎ বই রিভিউ</title>
        <link>https://shihabmahamud.github.io/p/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82%E0%A7%9F%E0%A7%87%E0%A6%B0-%E0%A6%86%E0%A6%B6%E0%A7%8D%E0%A6%9A%E0%A6%B0%E0%A7%8D%E0%A6%AF-%E0%A6%9C%E0%A6%97%E0%A7%8E-%E0%A6%AC%E0%A6%87-%E0%A6%B0%E0%A6%BF%E0%A6%AD%E0%A6%BF%E0%A6%89/</link>
        <pubDate>Tue, 22 Sep 2020 01:24:43 +0600</pubDate>
        
        <guid>https://shihabmahamud.github.io/p/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82%E0%A7%9F%E0%A7%87%E0%A6%B0-%E0%A6%86%E0%A6%B6%E0%A7%8D%E0%A6%9A%E0%A6%B0%E0%A7%8D%E0%A6%AF-%E0%A6%9C%E0%A6%97%E0%A7%8E-%E0%A6%AC%E0%A6%87-%E0%A6%B0%E0%A6%BF%E0%A6%AD%E0%A6%BF%E0%A6%89/</guid>
        <description>&lt;img src="https://shihabmahamud.github.io/p/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82%E0%A7%9F%E0%A7%87%E0%A6%B0-%E0%A6%86%E0%A6%B6%E0%A7%8D%E0%A6%9A%E0%A6%B0%E0%A7%8D%E0%A6%AF-%E0%A6%9C%E0%A6%97%E0%A7%8E-%E0%A6%AC%E0%A6%87-%E0%A6%B0%E0%A6%BF%E0%A6%AD%E0%A6%BF%E0%A6%89/programming-er-asorjo-jogot.jpg" alt="Featured image of post প্রোগ্রামিংয়ের আশ্চর্য জগৎ বই রিভিউ" /&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://bn.wikipedia.org/wiki/%e0%a6%ac%e0%a6%bf%e0%a6%b8%e0%a6%ae%e0%a6%bf%e0%a6%b2%e0%a7%8d%e0%a6%b2%e0%a6%be%e0%a6%b9%e0%a6%bf%e0%a6%b0_%e0%a6%b0%e0%a6%be%e0%a6%b9%e0%a6%ae%e0%a6%be%e0%a6%a8%e0%a6%bf%e0%a6%b0_%e0%a6%b0%e0%a6%be%e0%a6%b9%e0%a7%80%e0%a6%ae&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;বিসমিল্লাহির রাহমানির রাহীম।&lt;/em&gt;&lt;/a&gt; তথ্যের এই সহজলভ্যতার যুগে প্রোগ্রামিং শিক্ষতে আশা নতুন শিক্ষার্থীদের সঠিক গাইড লাইন পাওয়া খুবই দুস্কর। ভুল ভাবে প্রোগ্রামিং শেখার মাধ্যমে তাদের ভবিষ্যৎ হুমকি মুখে পড়তে পারে। তাই &lt;a class=&#34;link&#34; href=&#34;http://dimik.pub/book/264/programming-er-ascorjo-jogot-by-tamim-shahriar-subeen&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;তামিম শাহরিয়ার সুবিনরের প্রোগ্রামিংয়ের আশ্চর্য জগৎ&lt;/em&gt;&lt;/a&gt; বইটি হতে পারে একটা ভাল বিকল্প। একজন শিক্ষর্থীর প্রোগ্রামিং শেখা থেকে শুরু করে সেরা প্রোগ্রামার (superior programmer) হওয়া পর্যন্ত এই বইটি হতে তার সঙ্গি। বইটি পড়ার মাধ্যমে পাঠক যানতে পারবে প্রোগ্রামিং শেখার সঠিক এবং পরিক্ষিত ধাপ। যানতে পারবে প্রোগ্রামিং কি, কেন, কেন প্রোগ্রামিং শিখব? কিভাবে শিখব? কোন ভাষা প্রথমে শিখব? কতটুকু শিখব? কোথা থেকে শিখব? শেখার পরে কী করব? ইত্যাদি।
বইয়ের দু’টি অধ্যায় আমার সবথেকে গুরুত্বপূর্ণ মনে হয়েছে। একটি হচ্ছে &lt;em&gt;হাজার ঘন্টার কোডিং&lt;/em&gt; আর একটি হচ্ছে শেষ অধ্যায় &lt;em&gt;আমার প্রোগ্রামিং শেখা নিয়ে‌।&lt;em&gt;আমার কাছে মনে হয়ে &lt;em&gt;হাজার ঘন্টার কোডিং&lt;/em&gt; অধ্যায়ে সুবিন ভাই সম্পূর্ণ গাইডলাইনটি দিয়েছে। এখানে সুবিন ভাই বুঝিয়েছে একবছর কিভাবে কোডিং করতে হবে, কিভাবে হাজার ঘন্টা কোডিং করতে হবে। এই অধ্যায় বাস্তবায়নের সঠিক ভাবে প্রোগ্রামিং শেখার পথে একধাপ এগিয়ে যায়া যাবে &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Inshallah&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;ইনশাআল্লাহ&lt;/em&gt;&lt;/a&gt;।আর শেষ অধ্যায়ে সুবিন ভাই তার শিক্ষা ও কর্ম জীবর্নের বর্ণনা দিয়েছে। তার এই বর্ণনা মাধ্যমে পরিস্কার ভাবে ফুটে ওঠেছে সফটওয়্যার ইঞ্জিনিয়ার হওয়ার পূর্বশর্ত কি? একজন সফটওয়্যার ইঞ্জিনিয়ার কয়টি প্রোগ্রামিং ভাষা পারে সেটি যে বিবেচ্য বিষয় নয় তা বুঝিয়েছেন। অবশ্য বইটির অনেক অধ্যায়ে র্বনিত বিষয় &lt;a class=&#34;link&#34; href=&#34;http://subeen.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;সুবিন ডট কম&lt;/em&gt;&lt;/a&gt; এ সুবিন ভাই লিখেছেন।
আমি ইন্টারনেটের &lt;em&gt;(বিশেষ করে&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;Youtube&lt;/em&gt;&lt;/a&gt;&lt;/em&gt;)&lt;/em&gt; মাধ্যমে ওয়েব ডেভলপমেন্ট সর্ম্পকে জানতে পারি। তার পর &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/HTML&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;HTML&lt;/em&gt;&lt;/a&gt; শেখা শুরু করি। মোটামোটি &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/HTML&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;HTML&lt;/em&gt;&lt;/a&gt; বেসিক শিখি এবং &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/CSS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;CSS&lt;/em&gt;&lt;/a&gt; ও শিখি। এগুলো শেখার মধ্যে যানতে পারি ওয়েব ডেভলপমেন্টে প্রোগ্রামিং লাগে। প্রোগ্রামিং সর্ম্পকে যানতে গিয়ে এর প্রতি ভাল লাগা তৈরি হয়। ঠিক করি প্রোগ্রামিং শিখব।&lt;a class=&#34;link&#34; href=&#34;https://bn.wikipedia.org/wiki/%e0%a6%86%e0%a6%b2%e0%a6%b9%e0%a6%be%e0%a6%ae%e0%a6%a6%e0%a7%81%e0%a6%b2%e0%a6%bf%e0%a6%b2%e0%a7%8d%e0%a6%b2%e0%a6%be%e0%a6%b9&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt; &lt;em&gt;আলহামদুলিল্লাহ&lt;/em&gt;&lt;/a&gt;, সুবিন ভাইয়ের ফ্রি বই &lt;a class=&#34;link&#34; href=&#34;http://cpbook.subeen.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;কম্পিউটার প্রোগ্রামিং&lt;/em&gt;&lt;/a&gt; দিয়ে প্রোগ্রামিং শেখা শুরু করি। কিন্তু তখন আমার কাছে সঠিক গাইড লাইন ছিল না। তারপর এই বইটি সম্পর্কে যানতে পারি এবং বইটি কিনে ফেলি। আমি যেমন বইটি থেকে একটি গাইড লাইন পেয়েছি &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Inshallah&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;ইনশাআল্লাহ&lt;/em&gt;&lt;/a&gt; আসা করি অন্য পাঠকরাও সঠিক গাইড লাইন পাবে। সবার জন্য শুভ কামনা রইল।&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
